generator client {
  provider      = "prisma-client-js"
  output        = "./src/main/prisma"
  binaryTargets = ["native"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model friends {
  source                    String @db.Char(36)
  target                    String @db.Char(36)
  user_friends_sourceTouser user   @relation("friends_sourceTouser", fields: [source], references: [id], onDelete: Cascade, map: "source_fk")
  user_friends_targetTouser user   @relation("friends_targetTouser", fields: [target], references: [id], onDelete: Cascade, map: "target_fk")

  @@id([source, target])
  @@index([target], map: "target_fk")
}

model goal {
  id           String      @id @default(dbgenerated("(uuid())")) @db.Char(36)
  title        String      @db.Char(255)
  private      Boolean     @default(false)
  accomplished Boolean     @default(false)
  user_id      String      @db.Char(36)
  user         user        @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "user_id_fk")
  milestones   milestone[]

  @@index([user_id], map: "user_id_fk")
}

model milestone {
  id           String  @id @default(dbgenerated("(uuid())")) @db.Char(36)
  title        String  @db.Char(255)
  accomplished Boolean @default(false)
  goal_id      String  @db.Char(36)
  goal         goal    @relation(fields: [goal_id], references: [id], onDelete: Cascade, map: "goal_id_fk")

  @@index([goal_id], map: "goal_id_fk")
}

model user {
  id                           String    @id @default(dbgenerated("(uuid())")) @db.Char(36)
  name                         String    @unique(map: "name") @db.Char(70)
  password                     String    @db.Char(100)
  friends_friends_sourceTouser friends[] @relation("friends_sourceTouser")
  friends_friends_targetTouser friends[] @relation("friends_targetTouser")
  goals                        goal[]
}
